---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

env:
  SOPS_AGE_KEY_FILE: "{{.ROOT_DIR}}/age.key"

vars:
  # renovate: datasource=github-releases depName=getsops/sops
  SOPS_VERSION: v3.8.1

includes:
  blocky: containers/blocky

tasks:

  default:
    silent: true
    cmd: go-task -l

  deps:
    desc: Install System Deps
    cmds:
      - sudo rpm-ostree install --idempotent --assumeyes age bind-utils direnv expect fish git go-task gron htop moreutils nano net-tools netcat nmap rsync systemd-networkd tcpdump telnet tree wget yq
      - sudo rpm-ostree install --idempotent --assumeyes https://github.com/getsops/sops/releases/download/{{.SOPS_VERSION}}/sops-{{.SOPS_VERSION | replace "v" ""}}.aarch64.rpm

  start-*:
    desc: Start a container service
    cmds:
      - task: .reload
        vars:
          container: '{{.container}}'
          force: '{{.force}}'
      - sudo systemctl start {{.container}}
    vars:
      container: '{{index .MATCH 0}}'
      force: '{{.force | default "no"}}'

  stop-*:
    desc: Stop a container service
    cmd: sudo systemctl stop {{.container}}
    vars:
      container: '{{index .MATCH 0}}'

  restart-*:
    desc: Restart a container service
    cmds:
      - task: .reload
        vars:
          container: '{{.container}}'
          force: '{{.force}}'
      - sudo systemctl restart {{.container}}
    vars:
      container: '{{index .MATCH 0}}'
      force: '{{.force | default "no"}}'

  status-*:
    desc: Status of a container service
    cmd: sudo systemctl status {{.container}}
    vars:
      container: '{{index .MATCH 0}}'

  logs-*:
    desc: Tail logs of a container
    cmd: sudo podman logs -f {{.container}}
    vars:
      container: '{{index .MATCH 0}}'

  .reload:
    desc: Reload a container
    cmds:
      - sudo rsync -rv {{.ROOT_DIR}}/containers/{{.container}}/{{.container}}.container /etc/containers/systemd/
      - sudo rsync -rv --mkpath --delete {{.ROOT_DIR}}/containers/{{.container}}/data/{{- if eq .CLI_FORCE false }}config/{{ end }} /etc/containers/systemd/{{.container}}{{- if eq .CLI_FORCE false }}/config{{ end }}
      - sudo --preserve-env bash -c "find /etc/containers/systemd/{{.container}}/config -type f -name "*.sops.*" -print0 | xargs -0 -I {} sops --config {{.ROOT_DIR}}/.sops.yaml --decrypt --in-place {}"
      - sudo systemctl daemon-reload
    # Faux idempotency ...
    sources:
      - "{{.ROOT_DIR}}/containers/{{.container}}/**/**"
      - excude: "{{.ROOT_DIR}}/containers/{{.container}}/data/cache/**/**"
    generates:
      - /etc/containers/systemd/{{.container}}.container
      - /etc/containers/systemd/{{.container}}/config/**/**
      - /run/systemd/generator/{{.container}}.service
    label: reload-{{.container}}
    requires:
      vars: ["container", "force"]
    internal: true

  bootstrap-nut:
    desc: Copy NUT config files
    cmds:
      - sudo rsync -rv --delete {{.ROOT_DIR}}/ups/ /etc/ups/
      - sudo sed -i "s/pass_placeholder/$(cat ./ups/password.secret | sed 's/\//\\\//g')/" /etc/ups/* | bash
      - sudo systemctl enable --now nut.target nut-monitor nut-server
      - sudo usbhid-ups -a networkups