---
# yaml-language-server: $schema=https://taskfile.dev/schema.json
version: "3"

env:
  SOPS_AGE_KEY_FILE: '{{.ROOT_DIR}}/age.key'

vars:
  # renovate: datasource=github-releases depName=getsops/sops
  SOPS_VERSION: v3.8.1
  # renovate: datasource=github-releases depName=fastfetch-cli/fastfetch
  FASTFETCH_VERSION: 2.12.0

includes:
  app: ./apps
  nut: ./nut

x-preconditions:
  - &not-root
    msg: must not be run as root
    sh: '[[ $LOGNAME != "root" ]]'
  - &container-service-not-found
    msg: container service '{{.container}}' not found
    sh: systemctl status {{.container}}
  - &container-not-found
    msg: container '{{.container}}' not found
    sh: sudo podman inspect {{.container}}
  - &container-file-not-found
    msg: file 'apps/{{.container}}/{{.container}}.container' not found
    sh: test -f {{.ROOT_DIR}}/apps/{{.container}}/{{.container}}.container
  - &container-directory-not-found
    msg: directory 'apps/{{.container}}/data' not found
    sh: test -d {{.ROOT_DIR}}/apps/{{.container}}/data

tasks:

  default:
    cmd: go-task -l
    silent: true

  deps:
    desc: Install System Deps
    cmds:
      - sudo install -m 0755 -d /etc/apt/keyrings
      - sudo curl -fsSL https://download.docker.com/linux/debian/gpg -o /etc/apt/keyrings/docker.asc
      - sudo chmod a+r /etc/apt/keyrings/docker.asc
      - echo "deb [arch=$(dpkg --print-architecture) signed-by=/etc/apt/keyrings/docker.asc] https://download.docker.com/linux/debian $(. /etc/os-release && echo "$VERSION_CODENAME") stable" | sudo tee /etc/apt/sources.list.d/docker.list > /dev/null
      - sudo apt update; sudo apt upgrade -y; sudo apt full-upgrade -y; sudo apt autoclean; sudo apt autoremove -y
      - sudo apt install -y age bind9 dnsutils direnv expect fish fzf gh git gron htop btop moreutils nano net-tools netcat-traditional nmap rsync tcpdump telnet tree wget yq zoxide docker-ce docker-ce-cli containerd.io docker-buildx-plugin docker-compose-plugin
      - wget https://github.com/getsops/sops/releases/download/{{.SOPS_VERSION}}/sops_{{.SOPS_VERSION | replace "v" ""}}_arm64.deb
      - wget https://github.com/fastfetch-cli/fastfetch/releases/download/{{.FASTFETCH_VERSION}}/fastfetch-linux-aarch64.deb
      - sudo apt install -y ./sops_{{.SOPS_VERSION | replace "v" ""}}_arm64.deb
      - sudo apt install -y ./fastfetch-linux-aarch64.deb
      - sudo rm sops_{{.SOPS_VERSION | replace "v" ""}}_arm64.deb
      - sudo rm fastfetch-linux-aarch64.deb
    preconditions:
      - *not-root

  start-primary:
    desc: Restart docker compose
    cmds:
      - task: decrypt
      - docker compose -f docker-compose-primary.yml up -d --force-recreate
      - task: encrypt
    preconditions:
      - *not-root
    
  start-secondary:
    desc: Restart docker compose
    cmds:
      - docker compose -f docker-compose-secondary.yml up -d --force-recreate
    preconditions:
      - *not-root

  stop-*: 
    desc: Stop docker compose
    cmd: docker compose -f docker-compose-{{.container}}.yml down
    vars:
      container: '{{index .MATCH 0}}'
    preconditions:
      - *not-root

  decrypt:
    desc: decrypt files
    cmds:
      - find ./apps/dns/primary/bind/data/config -type f -name "*.sops.key" -print0 | xargs -0 -I {} sops --decrypt --in-place {}
    preconditions:
      - *not-root

  encrypt:
    desc: encrypt files
    cmds:
      - find ./apps/dns/primary/bind/data/config -type f -name "*.sops.key" -print0 | xargs -0 -I {} sops --encrypt --in-place {}
    preconditions:
      - *not-root

  logs-*:
    desc: Tail logs of a container
    cmd: sudo docker logs -f {{.container}}
    vars:
      container: '{{index .MATCH 0}}'
    preconditions:
      - *not-root
      - *container-not-found

  dotfiles:
    desc: Setup dotfiles
    cmds:
      - | # Nano
        git -C ~/.nano pull || git clone https://github.com/galenguyer/nano-syntax-highlighting ~/.nano
      - | # Direnv
        mkdir -p /home/$LOGNAME/.config/direnv && \
        tee /home/$LOGNAME/.config/direnv/direnv.toml > /dev/null <<EOF
        [whitelist]
        prefix = [ "/var/opt/home-service" ]
        EOF
      - | # Fish Hooks
        tee /home/$LOGNAME/.config/fish/conf.d/hooks.fish > /dev/null <<EOF
        if status is-interactive
            if type -q direnv
                direnv hook fish | source
            end
            if type -q starship
                starship init fish | source
            end
            if type -q zoxide
                zoxide init fish | source
            end
        end
        EOF
      - | # Fish Greeting
        tee /home/$LOGNAME/.config/fish/conf.d/fish_greeting.fish > /dev/null <<EOF
        function fish_greeting
            fastfetch
        end
        EOF
      - | # Fish Completions
        curl -fsSL -o /home/$LOGNAME/.config/fish/completions/task.fish \
            https://raw.githubusercontent.com/go-task/task/main/completion/fish/task.fish
    preconditions:
      - *not-root
